Service-oriented Computing (SOC) ist ein Paradigma des Systementwurfes mit dem Ziel, komplexe monolithische Systeme durch eine Komposition von interagierenden Systemen zu ersetzen. Diese interagierenden Systeme werden Services genannt und kapseln in sich abgeschlossene Funktionen, die sie über eine wohldefinierte und standardisierte Schnittstelle anbieten.

Diese Modularisierung vermag Komplexität und Kosten zu senken. Gleichzeitig führt die verteilte Ausführung von Services in dynamischen Kompositionen zu neuen Herausforderungen. Dabei spielt Korrektheit eine zentrale Rolle, da sie nicht nur von der lokalen Korrektheit der teilnehmenden Services, sondern auch von der Interaktion zwischen den Services abhängt. Weiterhin können sich Services im Gegensatz zu monolithischen Systemen verändern und werden nicht von einem einzelnen Teilnehmer kontrolliert.

Wir studieren die Korrektheit von Services und Servicekompositionen und untersuchen, wie der Entwurf von korrekten Servicekompositionen systematisch unterstützt werden kann. Wir legen dabei den Fokus auf das Kommunikationsprotokoll der Services. Mithilfe von formalen Methoden tragen wir zu drei Szenarien von DOC bei.

Die Korrektheit einer Servicekomposition hängt von der Korrektheit der teilnehmenden Services ab. Aus diesem Grund (1) studieren wir Korrektheitseigenschaften, die im Bezug auf einen einzelnen Service ausgedrückt und überprüft werden können. Wir validieren Services gegen Verhaltensspezifikationen und verifizieren ihre Gültigkeit in jeder möglichen Servicekomposition. Falls ein Service inkorrekt ist, erarbeiten wir Diagnoseinformationen mit deren Hilfe Fehler lokalisiert und repariert werden können.

Falls alle teilnehmenden Services einer Servicekomposition korrekt sind, kann ihre Interaktion zu Problemen führen. Wir (2) verifizieren automatisch die Korrektheit von Servicekompositionen. Weiterhin unterstützen wir die Entwurfsphase von Servicekompositionen und stellen Algorithmen vor, mit denen teilweise spezifizierte Kompositionen automatisch vervollständigt und mit denen inkorrekte Kompositionen automatisch korrigiert werden können.

Eine Servicekomposition kann weiterhin von einer Spezifikation (Choreographie genannt) abgeleitet werden. Eine Choreographie spezifiziert den Nachrichtenaustausch in einer Servicekomposition. Wir (3) erarbeiten einen Algorithmus, mit dem lokale Servicebeschreibungen aus einer Choreographie abgeleitet werden können, die per Konstruktion der Spezifikation genügen.

Alle Resultate wurden in einem einheitlichen formalen Modell ausgedrückt. Dies ermöglicht nicht nur formale Beweise, sondern macht die Resultate von konkreten Spezifikationssprachen unabhängig. Weiterhin wurden alle vorgestellten Algorithmen prototypisch implementiert und anhand von industriellen Fallstudien validiert.